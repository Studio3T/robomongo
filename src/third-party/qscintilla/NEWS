v2.7.2 16th June 2013
  - The build script for the Python bindings now has a --pyqt argument for
    specifying PyQt4 or PyQt5.
  - The default EOL mode on OS/X is now EolUnix.
  - Bug fixes.

v2.7.1 1st March 2013
  - Added support for the final release of Qt v5.
  - The build script for the Python bindings should now work with SIP v5.
  - Bug fixes.

v2.7 8th December 2012
  - Based on Scintilla v3.23.
  - Added support for Qt v5-rc1.
  - Added HashQuotedString, InactiveHashQuotedString, PreProcessorComment,
    InactivePreProcessorComment, setHighlightHashQuotedStrings() and
    highlightHashQuotedStrings() to QsciLexerCpp.
  - Added Variable, setHSSLanguage(), HSSLanguage(), setLessLanguage(),
    LessLanguage(), setSCCSLanguage() and SCCSLanguage() to QsciLexerCSS.
  - Added setOverwriteMode() and overwriteMode() to QsciScintilla.
  - Added wordAtLineIndex() to QsciScintilla.
  - Added findFirstInSelection() to QsciScintilla.
  - Added CallTipsPosition, callTipsPosition() and setCallTipsPosition() to
    QsciScintilla.
  - Added WrapFlagInMargin to QsciScintilla::WrapVisualFlag.
  - Added SquigglePixmapIndicator to QsciScintilla::IndicatorStyle.
  - The weight of a font (rather than whether it is just bold or not) is now
    respected.
  - Added SCLEX_AVS, SCLEX_COFFEESCRIPT, SCLEX_ECL, SCLEX_OSCRIPT,
    SCLEX_TCMD and SCLEX_VISUALPROLOG to QsciScintillaBase.
  - Added SC_CASEINSENSITIVEBEHAVIOUR_IGNORECASE and
    SC_CASEINSENSITIVEBEHAVIOUR_RESPECTCASE to QsciScintillaBase.
  - Added SC_FONT_SIZE_MULTIPLIER to QsciScintillaBase.
  - Added SC_WEIGHT_NORMAL, SC_WEIGHT_SEMIBOLD and SC_WEIGHT_BOLD to
    QsciScintillaBase.
  - Added SC_WRAPVISUALFLAG_MARGIN to QsciScintillaBase.
  - Added INDIC_SQUIGGLEPIXMAP to QsciScintillaBase.
  - Added SCI_AUTOCSETCASEINSENSITIVEBEHAVIOUR,
    SCI_AUTOCGETCASEINSENSITIVEBEHAVIOUR, SCI_CALLTIPSETPOSITION,
    SCI_COUNTCHARACTERS, SCI_CREATELOADER, SCI_DELETERANGE,
    SCI_FINDINDICATORFLASH, SCI_FINDINDICATORHIDE, SCI_FINDINDICATORSHOW,
    SCI_GETALLLINESVISIBLE, SCI_GETGAPPOSITION, SCI_GETPUNCTUATIONCHARS,
    SCI_GETRANGEPOINTER, SCI_GETSELECTIONEMPTY, SCI_GETTECHNOLOGY,
    SCI_GETWHITESPACECHARS, SCI_GETWORDCHARS, SCI_RGBAIMAGESETSCALE,
    SCI_SETPUNCTUATIONCHARS, SCI_SETTECHNOLOGY, SCI_STYLESETSIZEFRACTIONAL,
    SCI_STYLEGETSIZEFRACTIONAL, SCI_STYLESETWEIGHT and SCI_STYLEGETWEIGHT to
    QsciScintillaBase.
  - Removed SCI_GETUSEPALETTE and SCI_SETUSEPALETTE from QsciScintillaBase.
  - Bug fixes.

v2.6.2 20th June 2012
  - Added support for Qt v5-alpha.
  - QsciLexer::wordCharacters() is now part of the public API.
  - Bug fixes.

v2.6.1 10th February 2012
  - Support SCI_NAMESPACE to enable all internal Scintilla classes to be put
    into the Scintilla namespace.
  - APIs now allow for spaces between the end of a word and the opening
    parenthesis.
  - Building against Qt v3 is fixed.

v2.6 11th November 2011
  - Based on Scintilla v2.29.
  - Added Command, command() and execute() to QsciCommand.
  - Added boundTo() and find() to QsciCommandSet.
  - Added createStandardContextMenu() to QsciScintilla.
  - Added StraightBoxIndicator, DashesIndicator, DotsIndicator,
    SquiggleLowIndicator and DotBoxIndicator to QsciScintilla::IndicatorStyle.
  - Added markerDefine() to QsciScintilla.
  - Added MoNone, MoSublineSelect, marginOptions() and setMarginOptions() to
    QsciScintilla.
  - Added registerImage() to QsciScintilla.
  - Added setIndicatorOutlineColor() to QsciScintilla.
  - Added setMatchedBraceIndicator(), resetMatchedBraceIndicator(),
    setUnmatchedBraceIndicator() and resetUnmatchedBraceIndicator() to
    QsciScintilla.
  - Added highlightTripleQuotedStrings() and setHighlightTripleQuotedStrings()
    to QsciLexerCpp.
  - Added Label to QsciLexerLua.
  - Added DoubleQuotedStringVar, Translation, RegexVar, SubstitutionVar,
    BackticksVar, DoubleQuotedHereDocumentVar, BacktickHereDocumentVar,
    QuotedStringQQVar, QuotedStringQXVar, QuotedStringQRVar, setFoldAtElse()
    and foldAtElse() to QsciLexerPerl.
  - Added highlightSubidentifiers() and setHighlightSubidentifiers() to
    QsciLexerPython.
  - Added INDIC_STRAIGHTBOX, INDIC_DASH, INDIC_DOTS, INDIC_SQUIGGLELOW and
    INDIC_DOTBOX to QsciScintillaBase.
  - Added SC_MARGINOPTION_NONE and SC_MARGINOPTION_SUBLINESELECT to
    QsciScintillaBase.
  - Added SC_MARK_RGBAIMAGE to QsciScintillaBase.
  - Added SCI_BRACEBADLIGHTINDICATOR, SCI_BRACEHIGHLIGHTINDICATOR,
    SCI_GETIDENTIFIER, SCI_GETMARGINOPTIONS, SCI_INDICGETOUTLINEALPHA,
    SCI_INDICSETOUTLINEALPHA, SCI_MARKERDEFINERGBAIMAGE,
    SCI_MARKERENABLEHIGHLIGHT, SCI_MARKERSETBACKSELECTED,
    SCI_MOVESELECTEDLINESDOWN, SCI_MOVESELECTEDLINESUP, SCI_REGISTERRGBAIMAGE,
    SCI_RGBAIMAGESETHEIGHT, SCI_RGBAIMAGESETWIDTH, SCI_SCROLLTOEND,
    SCI_SCROLLTOSTART, SCI_SETEMPTYSELECTION, SCI_SETIDENTIFIER and
    SCI_SETMARGINOPTIONS to QsciScintillaBase.

v2.5.1 17th April 2011
  - Added QsciLexerMatlab and QsciLexerOctave.

v2.5 29th March 2011
  - Based on Scintilla v2.25.
  - Rectangular selections are now fully supported and compatible with SciTE.
  - The signature of the fromMimeData() and toMimeData() methods of
    QsciScintillaBase have changed incompatibly in order to support rectangular
    selections.
  - Added QsciScintilla::setAutoCompletionUseSingle() to replace the now
    deprecated setAutoCompletionShowSingle().
  - Added QsciScintilla::autoCompletionUseSingle() to replace the now
    deprecated autoCompletionShowSingle().
  - QsciScintilla::setAutoCompletionCaseSensitivity() is no longer ignored if a
    lexer has been set.
  - Added FullRectangle, LeftRectangle and Underline to the
    QsciScintilla::MarkerSymbol enum.
  - Added setExtraAscent(), extraAscent(), setExtraDescent() and extraDescent()
    to QsciScintilla.
  - Added setWhitespaceSize() and whitespaceSize() to QsciScintilla.
  - Added replaceSelectedText() to QsciScintilla.
  - Added setWhitespaceBackgroundColor() and setWhitespaceForegroundColor() to
    QsciScintilla.
  - Added setWrapIndentMode() and wrapIndentMode() to QsciScintilla.
  - Added setFirstVisibleLine() to QsciScintilla.
  - Added setContractedFolds() and contractedFolds() to QsciScintilla.
  - Added the SCN_HOTSPOTRELEASECLICK() signal to QsciScintillaBase.
  - The signature of the QsciScintillaBase::SCN_UPDATEUI() signal has changed.
  - Added the RawString and inactive styles to QsciLexerCPP.
  - Added MediaRule to QsciLexerCSS.
  - Added BackquoteString, RawString, KeywordSet5, KeywordSet6 and KeywordSet7
    to QsciLexerD.
  - Added setDjangoTemplates(), djangoTemplates(), setMakoTemplates() and
    makoTemplates() to QsciLexerHTML.
  - Added KeywordSet5, KeywordSet6, KeywordSet7 and KeywordSet8 to
    QsciLexerLua.
  - Added setInitialSpaces() and initialSpaces() to QsciLexerProperties.
  - Added setFoldCompact(), foldCompact(), setStringsOverNewlineAllowed() and
    stringsOverNewlineAllowed() to QsciLexerPython.
  - Added setFoldComments(), foldComments(), setFoldCompact() and foldCompact()
    to QsciLexerRuby.
  - Added setFoldComments() and foldComments(), and removed setFoldCompact()
    and foldCompact() from QsciLexerTCL.
  - Added setFoldComments(), foldComments(), setFoldCompact(), foldCompact(),
    setProcessComments(), processComments(), setProcessIf(), and processIf() to
    QsciLexerTeX.
  - Added QuotedIdentifier, setDottedWords(), dottedWords(), setFoldAtElse(),
    foldAtElse(), setFoldOnlyBegin(), foldOnlyBegin(), setHashComments(),
    hashComments(), setQuotedIdentifiers() and quotedIdentifiers() to
    QsciLexerSQL.
  - The Python bindings now allow optional arguments to be specified as keyword
    arguments.
  - The Python bindings will now build using the protected-is-public hack if
    possible.

v2.4.6 23rd December 2010
  - Added support for indicators to the high-level API, i.e. added the
    IndicatorStyle enum, the clearIndicatorRange(), fillIndicatorRange(),
    indicatorDefine(), indicatorDrawUnder(), setIndicatorDrawUnder() and
    setIndicatorForegroundColor methods, and the indicatorClicked() and
    indicatorReleased() signals to QsciScintilla.
  - Added support for the Key style in QsciLexerProperties.
  - Added an API file for Python v2.7.
  - Added the --no-timestamp command line option to the Python bindings'
    configure.py.

v2.4.5 31st August 2010
  - A bug fix release.

v2.4.4 12th July 2010
  - Added the canInsertFromMimeData(), fromMimeData() and toMimeData() methods
    to QsciScintillaBase.
  - QsciScintilla::markerDefine() now allows existing markers to be redefined.

v2.4.3 17th March 2010
  - Added clearFolds() to QsciScintilla.

v2.4.2 20th January 2010
  - Updated Spanish translations from Jaime Seuma.
  - Fixed compilation problems with Qt v3 and Qt v4 prior to v4.5.

v2.4.1 14th January 2010
  - Added the QsciLexerSpice and QsciLexerVerilog classes.
  - Significant performance improvements when handling long lines.
  - The Python bindings include automatically generated docstrings by default.
  - Added an API file for Python v3.

v2.4 5th June 2009
  - Based on Scintilla v1.78.
  - Added the QsciLexerCustom, QsciStyle and QsciStyledText classes.
  - Added annotate(), annotation(), clearAnnotations(), setAnnotationDisplay()
    and annotationDisplay() to QsciScintilla.
  - Added setMarginText(), clearMarginText(), setMarginType() and marginType()
    to QsciScintilla.
  - Added QsciLexer::lexerId() so that container lexers can be implemented.
  - Added editor() and styleBitsNeeded() to QsciLexer.
  - Added setDollarsAllowed() and dollarsAllowed() to QsciLexerCPP.
  - Added setFoldScriptComments(), foldScriptComments(),
    setFoldScriptHeredocs() and foldScriptHeredocs() to QsciLexerHTML.
  - Added setSmartHighlighting() and smartHighlighting() to QsciLexerPascal.
    (Note that the Scintilla Pascal lexer has changed so that any saved colour
    and font settings will not be properly restored.)
  - Added setFoldPackages(), foldPackages(), setFoldPODBlocks() and
    foldPODBlocks() to QsciLexerPerl.
  - Added setV2UnicodeAllowed(), v2UnicodeAllowed(), setV3BinaryOctalAllowed(),
    v3BinaryOctalAllowed(), setV3BytesAllowed and v3BytesAllowed() to
    QsciLexerPython.
  - Added setScriptsStyled() and scriptsStyled() to QsciLexerXML.
  - Added Spanish translations from Jaime Seuma.

v2.3.2 17th November 2008
  - A bug fix release.

v2.3.1 6th November 2008
  - Based on Scintilla v1.77.
  - Added the read() and write() methods to QsciScintilla to allow a file to be
    read and written while minimising the conversions.
  - Added the positionFromLineIndex() and lineIndexFromPosition() methods to
    QsciScintilla to convert between a Scintilla character address and a
    QScintilla character address.
  - Added QsciScintilla::wordAtPoint() to return the word at the given screen
    coordinates.
  - QSciScintilla::setSelection() now allows the carat to be left at either the
    start or the end of the selection.
  - 'with' is now treated as a keyword by the Python lexer.

v2.3 20th September 2008
  - Based on Scintilla v1.76.
  - The new QsciAbstractAPIs class allows applications to replace the default
    implementation of the language APIs used for auto-completion lists and call
    tips.
  - Added QsciScintilla::apiContext() to allow applications to determine the
    context used for auto-completion and call tips.
  - Added the QsciLexerFortran, QsciLexerFortran77, QsciLexerPascal,
    QsciLexerPostScript, QsciLexerTCL, QsciLexerXML and QsciLexerYAML classes.
  - QsciScintilla::setFolding() will now accept an optional margin number.

v2.2 27th February 2008
  - Based on Scintilla v1.75.
  - A lexer's default colour, paper and font are now written to and read from
    the settings.
  - Windows64 is now supported.
  - The signature of the QsciScintillaBase::SCN_MACRORECORD() signal has
    changed slightly.
  - Changed the licensing to match the current Qt licenses, including GPL v3.

v2.1 1st June 2007
  - A slightly revised API, incompatible with QScintilla v2.0.
  - Lexers now remember their style settings.  A lexer no longer has to be the
    current lexer when changing a style's color, end-of-line fill, font or
    paper.
  - The color(), eolFill(), font() and paper() methods of QsciLexer now return
    the current values for a style rather than the default values.
  - The setDefaultColor(), setDefaultFont() and setDefaultPaper() methods of
    QsciLexer are no longer slots and no longer virtual.
  - The defaultColor(), defaultFont() and defaultPaper() methods of QsciLexer
    are no longer virtual.
  - The color(), eolFill(), font() and paper() methods of all QsciLexer derived
    classes (except for QsciLexer itself) have been renamed defaultColor(),
    defaultEolFill(), defaultFont() and defaultPaper() respectively.

v2.0 26th May 2007
  - A revised API, incompatible with QScintilla v1.
  - Hugely improved autocompletion and call tips support.
  - Supports both Qt v3 and Qt v4.
  - Includes Python bindings.
